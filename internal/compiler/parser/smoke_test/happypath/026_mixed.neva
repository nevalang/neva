import {
	std:io
}

type {
	useId int
	money float
	userName string
	isAdmin bool
}

const {
    pi float = 3.14
    magicNum int = 42
}

interface {
	IReader(path string) (i int, e err)
	IWriter(path string) (i int, anything any)
}

component {
	Main(start any) (stop any) {
		nodes {
			abs IReader
			concrete  Scanner
		}
		net {
			:start -> abs:v
			abs:v -> [concrete:v]
			concrete:v -> :code
		}
	}

	#extern(int IntAdder, float FloatAdder, string StringAdder)
    pub Add<
        T int | float | string
    >(seq stream<T>) (res T)
}