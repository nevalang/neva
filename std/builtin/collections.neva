component {
    // Len returns the length of the given sequence: list, map, or string.
    // For lists it returns number of elements,
    // for maps it returns number of keys,
    // and for strings it returns number of utf-8 characters.
    #extern(list list_len, map map_len)
    pub Len<T list<any> | map<any> | string>(data T) (res int)

    // Index returns the element at the given index in the ordered collection.
    // If the index is out of bounds, it returns an error.
    // The index is zero-based.
    #extern(index)
    pub Index<T any>(data list<T>, idx int) (res T, err error)

    // Push appends new element to a list.
    // It allocates a copy so old list is not modified.
    #extern(list_push)
    pub Push<T> (lst list<T>, data T) (res list<T>)

    // Sort returns sorted version of the given list.
    #extern(int int_sort, float float_sort, string string_sort)
    pub Sort<T int | float | string>(data list<T>) (res T)

    // Join returns 
    #extern(join)
    pub Join(data list<string>) (res string)

    // Split 
    #extern(split)
    pub Split(data string, delim string) (res list<string>)

    #extern(slice)
    pub Slice<T string | list<any>>(data T, from int, to int) (res T, err error)
}
