// RGBA represents a color in the RGBA 64-bit color space.
pub type RGBA struct {
  r int
  g int
  b int
  a int
}

// Pixel represents an RGBA color at a given Point.
pub type Pixel struct {
  x int
  y int
  color RGBA
}

// Image is an RGBA represented as a string of pixels with one byte per color component.
//
// Pixels are arranged in order such that (x, y) starts at pixels[y*width + x*4].
pub type Image struct {
  pixels string
  width int
  height int
}

// New creates a new transparent RGBA image with the given width and height.
#extern(image_new)
pub component New(width int, height int) (img Image)

// Draw the src image over dst at (x, y) and return the resulting image.
//
// Use in conjunction with SubImage to mask the src image.
#extern(image_draw)
pub component Draw(dst Image, src Image, x int, y int) (img Image)

// SubImage returns a subimage between the input points (x0, y0) and (x1, y1).
#extern(image_subimage)
pub component SubImage(img Image, x0 int, y0 int, x1 int, y1 int) (img Image)

// Decode a PNG image from data or return an error.
#extern(image_decode)
pub component Decode(data string) (img Image, err error)

// Encode a PNG image or return an error.
#extern(image_encode)
pub component Encode(img Image) (data string, err error)
