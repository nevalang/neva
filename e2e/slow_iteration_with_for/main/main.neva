// this e2e test must prove that this issue is fixed:
// https://github.com/nevalang/neva/issues/575
// all elements of the array must be printed before program terminate

import { time, fmt, runtime, streams }

const lst list<int> = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

def Main(start any) (stop any) {
    streams.FromList<int>, streams.ForEach{Slow}, streams.Wait, runtime.Panic
    ---
    :start -> $lst -> listToStream -> for
    for:res -> wait -> :stop
    for:err -> panic
}

def Slow(data int) (res any, err error) {
    time.Delay<int>
    fmt.Println<int>?
    ---
    :data -> delay:data
    $time.second -> delay:dur
    delay -> println:data
    println:res -> :res
}
