import { x }

component {
	Main(start) (stop) {
		nodes { Aux, Println }
		net {
			:start             -> aux:sig
			[aux:res, aux:err] -> println:data
			println:sig        -> :stop
		}
	}
	
	Aux(sig) (res int, err error) {
		nodes {
			reader1 IntReader
			reader2 IntReader
			adder Reduce<int> { Add<int> }
		}
		net {
			:sig                       -> reader1:sig
			reader1:num                -> [adder:port[0], reader2:sig]
			[reader1:err, reader2:err] -> :err
			reader2:num                -> adder:port[1]
			adder:res                  -> :res
		}
	}

	IntReader(sig any) (num int, err error) {
		nodes { x.Scanln, x.ParseNum<int> }
		net {
			:sig -> scanln:sig
			scanln:data -> parseNum:data
			parseNum:res -> :num
			parseNum:err -> :err
		}
	}
}