import {
	fmt
	lists
	runtime
	streams
}

const lst list<bool> = [true, false]

def Main(start any) (stop any) {
	list_to_stream ListToStream<bool>
	for_print For<bool>{PrintAsNum}
	wait streams.Wait
	panic runtime.Panic
	---
	:start -> $lst -> list_to_stream -> for_print
	for_print:res -> wait -> :stop
	for_print:err -> panic
}

def PrintAsNum(data bool) (res any, err error) {
	ternary Ternary
	println fmt.Println<bool>
	---
	:data -> ternary:if
	1 -> ternary:then
	0 -> ternary:else
	ternary -> println
	println:res -> :res
	println:err -> :err
}
